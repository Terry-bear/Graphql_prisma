// Code generated by github.com/prisma/graphqlgen, DO NOT EDIT.

import { GraphQLResolveInfo } from "graphql";
import {
  AuthUser,
  AuthUserConnection,
  PageInfo,
  AuthUserEdge,
  AggregateAuthUser,
  BatchPayload,
  AuthUserSubscriptionPayload,
  AuthUserPreviousValues
} from "./prisma-client";
import { Context } from "../types";

export type AuthUserOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "mobileNo_ASC"
  | "mobileNo_DESC"
  | "idCard_ASC"
  | "idCard_DESC"
  | "userName_ASC"
  | "userName_DESC"
  | "email_ASC"
  | "email_DESC"
  | "lastLoginDate_ASC"
  | "lastLoginDate_DESC"
  | "lastResetDate_ASC"
  | "lastResetDate_DESC"
  | "name_ASC"
  | "name_DESC"
  | "certifiedStatus_ASC"
  | "certifiedStatus_DESC"
  | "headpic_ASC"
  | "headpic_DESC"
  | "kongKey_ASC"
  | "kongKey_DESC"
  | "kongId_ASC"
  | "kongId_DESC"
  | "accessKey_ASC"
  | "accessKey_DESC"
  | "accessId_ASC"
  | "accessId_DESC"
  | "passWord_ASC"
  | "passWord_DESC"
  | "lesseeId_ASC"
  | "lesseeId_DESC"
  | "wxopenId_ASC"
  | "wxopenId_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";
export type MutationType = "CREATED" | "UPDATED" | "DELETED";

export namespace QueryResolvers {
  export const defaultResolvers = {};

  export interface AuthUserWhereUniqueInput {
    id?: string | null;
    mobileNo?: string | null;
    idCard?: string | null;
    userName?: string | null;
    email?: string | null;
  }
  export interface AuthUserWhereInput {
    id?: string | null;
    id_not?: string | null;
    id_in?: string[] | null;
    id_not_in?: string[] | null;
    id_lt?: string | null;
    id_lte?: string | null;
    id_gt?: string | null;
    id_gte?: string | null;
    id_contains?: string | null;
    id_not_contains?: string | null;
    id_starts_with?: string | null;
    id_not_starts_with?: string | null;
    id_ends_with?: string | null;
    id_not_ends_with?: string | null;
    mobileNo?: string | null;
    mobileNo_not?: string | null;
    mobileNo_in?: string[] | null;
    mobileNo_not_in?: string[] | null;
    mobileNo_lt?: string | null;
    mobileNo_lte?: string | null;
    mobileNo_gt?: string | null;
    mobileNo_gte?: string | null;
    mobileNo_contains?: string | null;
    mobileNo_not_contains?: string | null;
    mobileNo_starts_with?: string | null;
    mobileNo_not_starts_with?: string | null;
    mobileNo_ends_with?: string | null;
    mobileNo_not_ends_with?: string | null;
    idCard?: string | null;
    idCard_not?: string | null;
    idCard_in?: string[] | null;
    idCard_not_in?: string[] | null;
    idCard_lt?: string | null;
    idCard_lte?: string | null;
    idCard_gt?: string | null;
    idCard_gte?: string | null;
    idCard_contains?: string | null;
    idCard_not_contains?: string | null;
    idCard_starts_with?: string | null;
    idCard_not_starts_with?: string | null;
    idCard_ends_with?: string | null;
    idCard_not_ends_with?: string | null;
    userName?: string | null;
    userName_not?: string | null;
    userName_in?: string[] | null;
    userName_not_in?: string[] | null;
    userName_lt?: string | null;
    userName_lte?: string | null;
    userName_gt?: string | null;
    userName_gte?: string | null;
    userName_contains?: string | null;
    userName_not_contains?: string | null;
    userName_starts_with?: string | null;
    userName_not_starts_with?: string | null;
    userName_ends_with?: string | null;
    userName_not_ends_with?: string | null;
    email?: string | null;
    email_not?: string | null;
    email_in?: string[] | null;
    email_not_in?: string[] | null;
    email_lt?: string | null;
    email_lte?: string | null;
    email_gt?: string | null;
    email_gte?: string | null;
    email_contains?: string | null;
    email_not_contains?: string | null;
    email_starts_with?: string | null;
    email_not_starts_with?: string | null;
    email_ends_with?: string | null;
    email_not_ends_with?: string | null;
    lastLoginDate?: string | null;
    lastLoginDate_not?: string | null;
    lastLoginDate_in?: string[] | null;
    lastLoginDate_not_in?: string[] | null;
    lastLoginDate_lt?: string | null;
    lastLoginDate_lte?: string | null;
    lastLoginDate_gt?: string | null;
    lastLoginDate_gte?: string | null;
    lastLoginDate_contains?: string | null;
    lastLoginDate_not_contains?: string | null;
    lastLoginDate_starts_with?: string | null;
    lastLoginDate_not_starts_with?: string | null;
    lastLoginDate_ends_with?: string | null;
    lastLoginDate_not_ends_with?: string | null;
    lastResetDate?: string | null;
    lastResetDate_not?: string | null;
    lastResetDate_in?: string[] | null;
    lastResetDate_not_in?: string[] | null;
    lastResetDate_lt?: string | null;
    lastResetDate_lte?: string | null;
    lastResetDate_gt?: string | null;
    lastResetDate_gte?: string | null;
    lastResetDate_contains?: string | null;
    lastResetDate_not_contains?: string | null;
    lastResetDate_starts_with?: string | null;
    lastResetDate_not_starts_with?: string | null;
    lastResetDate_ends_with?: string | null;
    lastResetDate_not_ends_with?: string | null;
    name?: string | null;
    name_not?: string | null;
    name_in?: string[] | null;
    name_not_in?: string[] | null;
    name_lt?: string | null;
    name_lte?: string | null;
    name_gt?: string | null;
    name_gte?: string | null;
    name_contains?: string | null;
    name_not_contains?: string | null;
    name_starts_with?: string | null;
    name_not_starts_with?: string | null;
    name_ends_with?: string | null;
    name_not_ends_with?: string | null;
    certifiedStatus?: number | null;
    certifiedStatus_not?: number | null;
    certifiedStatus_in?: number[] | null;
    certifiedStatus_not_in?: number[] | null;
    certifiedStatus_lt?: number | null;
    certifiedStatus_lte?: number | null;
    certifiedStatus_gt?: number | null;
    certifiedStatus_gte?: number | null;
    headpic?: string | null;
    headpic_not?: string | null;
    headpic_in?: string[] | null;
    headpic_not_in?: string[] | null;
    headpic_lt?: string | null;
    headpic_lte?: string | null;
    headpic_gt?: string | null;
    headpic_gte?: string | null;
    headpic_contains?: string | null;
    headpic_not_contains?: string | null;
    headpic_starts_with?: string | null;
    headpic_not_starts_with?: string | null;
    headpic_ends_with?: string | null;
    headpic_not_ends_with?: string | null;
    kongKey?: string | null;
    kongKey_not?: string | null;
    kongKey_in?: string[] | null;
    kongKey_not_in?: string[] | null;
    kongKey_lt?: string | null;
    kongKey_lte?: string | null;
    kongKey_gt?: string | null;
    kongKey_gte?: string | null;
    kongKey_contains?: string | null;
    kongKey_not_contains?: string | null;
    kongKey_starts_with?: string | null;
    kongKey_not_starts_with?: string | null;
    kongKey_ends_with?: string | null;
    kongKey_not_ends_with?: string | null;
    kongId?: string | null;
    kongId_not?: string | null;
    kongId_in?: string[] | null;
    kongId_not_in?: string[] | null;
    kongId_lt?: string | null;
    kongId_lte?: string | null;
    kongId_gt?: string | null;
    kongId_gte?: string | null;
    kongId_contains?: string | null;
    kongId_not_contains?: string | null;
    kongId_starts_with?: string | null;
    kongId_not_starts_with?: string | null;
    kongId_ends_with?: string | null;
    kongId_not_ends_with?: string | null;
    accessKey?: string | null;
    accessKey_not?: string | null;
    accessKey_in?: string[] | null;
    accessKey_not_in?: string[] | null;
    accessKey_lt?: string | null;
    accessKey_lte?: string | null;
    accessKey_gt?: string | null;
    accessKey_gte?: string | null;
    accessKey_contains?: string | null;
    accessKey_not_contains?: string | null;
    accessKey_starts_with?: string | null;
    accessKey_not_starts_with?: string | null;
    accessKey_ends_with?: string | null;
    accessKey_not_ends_with?: string | null;
    accessId?: string | null;
    accessId_not?: string | null;
    accessId_in?: string[] | null;
    accessId_not_in?: string[] | null;
    accessId_lt?: string | null;
    accessId_lte?: string | null;
    accessId_gt?: string | null;
    accessId_gte?: string | null;
    accessId_contains?: string | null;
    accessId_not_contains?: string | null;
    accessId_starts_with?: string | null;
    accessId_not_starts_with?: string | null;
    accessId_ends_with?: string | null;
    accessId_not_ends_with?: string | null;
    passWord?: string | null;
    passWord_not?: string | null;
    passWord_in?: string[] | null;
    passWord_not_in?: string[] | null;
    passWord_lt?: string | null;
    passWord_lte?: string | null;
    passWord_gt?: string | null;
    passWord_gte?: string | null;
    passWord_contains?: string | null;
    passWord_not_contains?: string | null;
    passWord_starts_with?: string | null;
    passWord_not_starts_with?: string | null;
    passWord_ends_with?: string | null;
    passWord_not_ends_with?: string | null;
    lesseeId?: string | null;
    lesseeId_not?: string | null;
    lesseeId_in?: string[] | null;
    lesseeId_not_in?: string[] | null;
    lesseeId_lt?: string | null;
    lesseeId_lte?: string | null;
    lesseeId_gt?: string | null;
    lesseeId_gte?: string | null;
    lesseeId_contains?: string | null;
    lesseeId_not_contains?: string | null;
    lesseeId_starts_with?: string | null;
    lesseeId_not_starts_with?: string | null;
    lesseeId_ends_with?: string | null;
    lesseeId_not_ends_with?: string | null;
    wxopenId?: string | null;
    wxopenId_not?: string | null;
    wxopenId_in?: string[] | null;
    wxopenId_not_in?: string[] | null;
    wxopenId_lt?: string | null;
    wxopenId_lte?: string | null;
    wxopenId_gt?: string | null;
    wxopenId_gte?: string | null;
    wxopenId_contains?: string | null;
    wxopenId_not_contains?: string | null;
    wxopenId_starts_with?: string | null;
    wxopenId_not_starts_with?: string | null;
    wxopenId_ends_with?: string | null;
    wxopenId_not_ends_with?: string | null;
    AND?: AuthUserWhereInput[] | null;
    OR?: AuthUserWhereInput[] | null;
    NOT?: AuthUserWhereInput[] | null;
  }

  export interface ArgsAuthUser {
    where: AuthUserWhereUniqueInput;
  }

  export interface ArgsAuthUsers {
    where?: AuthUserWhereInput | null;
    orderBy?: AuthUserOrderByInput | null;
    skip?: number | null;
    after?: string | null;
    before?: string | null;
    first?: number | null;
    last?: number | null;
  }

  export interface ArgsAuthUsersConnection {
    where?: AuthUserWhereInput | null;
    orderBy?: AuthUserOrderByInput | null;
    skip?: number | null;
    after?: string | null;
    before?: string | null;
    first?: number | null;
    last?: number | null;
  }

  export type AuthUserResolver = (
    parent: undefined,
    args: ArgsAuthUser,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | null | Promise<AuthUser | null>;

  export type AuthUsersResolver = (
    parent: undefined,
    args: ArgsAuthUsers,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => Array<AuthUser | null> | Promise<Array<AuthUser | null>>;

  export type AuthUsersConnectionResolver = (
    parent: undefined,
    args: ArgsAuthUsersConnection,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUserConnection | Promise<AuthUserConnection>;

  export interface Type {
    authUser: (
      parent: undefined,
      args: ArgsAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | null | Promise<AuthUser | null>;

    authUsers: (
      parent: undefined,
      args: ArgsAuthUsers,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => Array<AuthUser | null> | Promise<Array<AuthUser | null>>;

    authUsersConnection: (
      parent: undefined,
      args: ArgsAuthUsersConnection,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUserConnection | Promise<AuthUserConnection>;
  }
}

export namespace AuthUserResolvers {
  export const defaultResolvers = {
    id: (parent: AuthUser) => parent.id,
    mobileNo: (parent: AuthUser) =>
      parent.mobileNo === undefined ? null : parent.mobileNo,
    idCard: (parent: AuthUser) =>
      parent.idCard === undefined ? null : parent.idCard,
    userName: (parent: AuthUser) => parent.userName,
    email: (parent: AuthUser) =>
      parent.email === undefined ? null : parent.email,
    lastLoginDate: (parent: AuthUser) =>
      parent.lastLoginDate === undefined ? null : parent.lastLoginDate,
    lastResetDate: (parent: AuthUser) =>
      parent.lastResetDate === undefined ? null : parent.lastResetDate,
    name: (parent: AuthUser) =>
      parent.name === undefined ? null : parent.name,
    certifiedStatus: (parent: AuthUser) =>
      parent.certifiedStatus === undefined ? null : parent.certifiedStatus,
    headpic: (parent: AuthUser) =>
      parent.headpic === undefined ? null : parent.headpic,
    kongKey: (parent: AuthUser) =>
      parent.kongKey === undefined ? null : parent.kongKey,
    kongId: (parent: AuthUser) =>
      parent.kongId === undefined ? null : parent.kongId,
    accessKey: (parent: AuthUser) =>
      parent.accessKey === undefined ? null : parent.accessKey,
    accessId: (parent: AuthUser) =>
      parent.accessId === undefined ? null : parent.accessId,
    passWord: (parent: AuthUser) =>
      parent.passWord === undefined ? null : parent.passWord,
    lesseeId: (parent: AuthUser) =>
      parent.lesseeId === undefined ? null : parent.lesseeId,
    wxopenId: (parent: AuthUser) =>
      parent.wxopenId === undefined ? null : parent.wxopenId
  };

  export type IdResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export type MobileNoResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type IdCardResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type UserNameResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export type EmailResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type LastLoginDateResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type LastResetDateResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type NameResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type CertifiedStatusResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => number | null | Promise<number | null>;

  export type HeadpicResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type KongKeyResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type KongIdResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type AccessKeyResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type AccessIdResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type PassWordResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type LesseeIdResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type WxopenIdResolver = (
    parent: AuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export interface Type {
    id: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;

    mobileNo: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    idCard: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    userName: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;

    email: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    lastLoginDate: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    lastResetDate: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    name: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    certifiedStatus: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => number | null | Promise<number | null>;

    headpic: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    kongKey: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    kongId: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    accessKey: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    accessId: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    passWord: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    lesseeId: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    wxopenId: (
      parent: AuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;
  }
}

export namespace AuthUserConnectionResolvers {
  export const defaultResolvers = {
    pageInfo: (parent: AuthUserConnection) => parent.pageInfo,
    edges: (parent: AuthUserConnection) => parent.edges
  };

  export type PageInfoResolver = (
    parent: AuthUserConnection,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => PageInfo | Promise<PageInfo>;

  export type EdgesResolver = (
    parent: AuthUserConnection,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => Array<AuthUserEdge | null> | Promise<Array<AuthUserEdge | null>>;

  export type AggregateResolver = (
    parent: AuthUserConnection,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AggregateAuthUser | Promise<AggregateAuthUser>;

  export interface Type {
    pageInfo: (
      parent: AuthUserConnection,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => PageInfo | Promise<PageInfo>;

    edges: (
      parent: AuthUserConnection,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => Array<AuthUserEdge | null> | Promise<Array<AuthUserEdge | null>>;

    aggregate: (
      parent: AuthUserConnection,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AggregateAuthUser | Promise<AggregateAuthUser>;
  }
}

export namespace PageInfoResolvers {
  export const defaultResolvers = {
    hasNextPage: (parent: PageInfo) => parent.hasNextPage,
    hasPreviousPage: (parent: PageInfo) => parent.hasPreviousPage,
    startCursor: (parent: PageInfo) =>
      parent.startCursor === undefined ? null : parent.startCursor,
    endCursor: (parent: PageInfo) =>
      parent.endCursor === undefined ? null : parent.endCursor
  };

  export type HasNextPageResolver = (
    parent: PageInfo,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => boolean | Promise<boolean>;

  export type HasPreviousPageResolver = (
    parent: PageInfo,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => boolean | Promise<boolean>;

  export type StartCursorResolver = (
    parent: PageInfo,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type EndCursorResolver = (
    parent: PageInfo,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export interface Type {
    hasNextPage: (
      parent: PageInfo,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => boolean | Promise<boolean>;

    hasPreviousPage: (
      parent: PageInfo,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => boolean | Promise<boolean>;

    startCursor: (
      parent: PageInfo,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    endCursor: (
      parent: PageInfo,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;
  }
}

export namespace AuthUserEdgeResolvers {
  export const defaultResolvers = {
    node: (parent: AuthUserEdge) => parent.node,
    cursor: (parent: AuthUserEdge) => parent.cursor
  };

  export type NodeResolver = (
    parent: AuthUserEdge,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | Promise<AuthUser>;

  export type CursorResolver = (
    parent: AuthUserEdge,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export interface Type {
    node: (
      parent: AuthUserEdge,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | Promise<AuthUser>;

    cursor: (
      parent: AuthUserEdge,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;
  }
}

export namespace AggregateAuthUserResolvers {
  export const defaultResolvers = {
    count: (parent: AggregateAuthUser) => parent.count
  };

  export type CountResolver = (
    parent: AggregateAuthUser,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => number | Promise<number>;

  export interface Type {
    count: (
      parent: AggregateAuthUser,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => number | Promise<number>;
  }
}

export namespace MutationResolvers {
  export const defaultResolvers = {};

  export interface AuthUserCreateInput {
    mobileNo?: string | null;
    idCard?: string | null;
    userName: string;
    email?: string | null;
    lastLoginDate?: string | null;
    lastResetDate?: string | null;
    name?: string | null;
    certifiedStatus?: number | null;
    headpic?: string | null;
    kongKey?: string | null;
    kongId?: string | null;
    accessKey?: string | null;
    accessId?: string | null;
    passWord?: string | null;
    lesseeId?: string | null;
    wxopenId?: string | null;
  }
  export interface AuthUserUpdateInput {
    mobileNo?: string | null;
    idCard?: string | null;
    userName?: string | null;
    email?: string | null;
    lastLoginDate?: string | null;
    lastResetDate?: string | null;
    name?: string | null;
    certifiedStatus?: number | null;
    headpic?: string | null;
    kongKey?: string | null;
    kongId?: string | null;
    accessKey?: string | null;
    accessId?: string | null;
    passWord?: string | null;
    lesseeId?: string | null;
    wxopenId?: string | null;
  }
  export interface AuthUserWhereUniqueInput {
    id?: string | null;
    mobileNo?: string | null;
    idCard?: string | null;
    userName?: string | null;
    email?: string | null;
  }
  export interface AuthUserUpdateManyMutationInput {
    mobileNo?: string | null;
    idCard?: string | null;
    userName?: string | null;
    email?: string | null;
    lastLoginDate?: string | null;
    lastResetDate?: string | null;
    name?: string | null;
    certifiedStatus?: number | null;
    headpic?: string | null;
    kongKey?: string | null;
    kongId?: string | null;
    accessKey?: string | null;
    accessId?: string | null;
    passWord?: string | null;
    lesseeId?: string | null;
    wxopenId?: string | null;
  }
  export interface AuthUserWhereInput {
    id?: string | null;
    id_not?: string | null;
    id_in?: string[] | null;
    id_not_in?: string[] | null;
    id_lt?: string | null;
    id_lte?: string | null;
    id_gt?: string | null;
    id_gte?: string | null;
    id_contains?: string | null;
    id_not_contains?: string | null;
    id_starts_with?: string | null;
    id_not_starts_with?: string | null;
    id_ends_with?: string | null;
    id_not_ends_with?: string | null;
    mobileNo?: string | null;
    mobileNo_not?: string | null;
    mobileNo_in?: string[] | null;
    mobileNo_not_in?: string[] | null;
    mobileNo_lt?: string | null;
    mobileNo_lte?: string | null;
    mobileNo_gt?: string | null;
    mobileNo_gte?: string | null;
    mobileNo_contains?: string | null;
    mobileNo_not_contains?: string | null;
    mobileNo_starts_with?: string | null;
    mobileNo_not_starts_with?: string | null;
    mobileNo_ends_with?: string | null;
    mobileNo_not_ends_with?: string | null;
    idCard?: string | null;
    idCard_not?: string | null;
    idCard_in?: string[] | null;
    idCard_not_in?: string[] | null;
    idCard_lt?: string | null;
    idCard_lte?: string | null;
    idCard_gt?: string | null;
    idCard_gte?: string | null;
    idCard_contains?: string | null;
    idCard_not_contains?: string | null;
    idCard_starts_with?: string | null;
    idCard_not_starts_with?: string | null;
    idCard_ends_with?: string | null;
    idCard_not_ends_with?: string | null;
    userName?: string | null;
    userName_not?: string | null;
    userName_in?: string[] | null;
    userName_not_in?: string[] | null;
    userName_lt?: string | null;
    userName_lte?: string | null;
    userName_gt?: string | null;
    userName_gte?: string | null;
    userName_contains?: string | null;
    userName_not_contains?: string | null;
    userName_starts_with?: string | null;
    userName_not_starts_with?: string | null;
    userName_ends_with?: string | null;
    userName_not_ends_with?: string | null;
    email?: string | null;
    email_not?: string | null;
    email_in?: string[] | null;
    email_not_in?: string[] | null;
    email_lt?: string | null;
    email_lte?: string | null;
    email_gt?: string | null;
    email_gte?: string | null;
    email_contains?: string | null;
    email_not_contains?: string | null;
    email_starts_with?: string | null;
    email_not_starts_with?: string | null;
    email_ends_with?: string | null;
    email_not_ends_with?: string | null;
    lastLoginDate?: string | null;
    lastLoginDate_not?: string | null;
    lastLoginDate_in?: string[] | null;
    lastLoginDate_not_in?: string[] | null;
    lastLoginDate_lt?: string | null;
    lastLoginDate_lte?: string | null;
    lastLoginDate_gt?: string | null;
    lastLoginDate_gte?: string | null;
    lastLoginDate_contains?: string | null;
    lastLoginDate_not_contains?: string | null;
    lastLoginDate_starts_with?: string | null;
    lastLoginDate_not_starts_with?: string | null;
    lastLoginDate_ends_with?: string | null;
    lastLoginDate_not_ends_with?: string | null;
    lastResetDate?: string | null;
    lastResetDate_not?: string | null;
    lastResetDate_in?: string[] | null;
    lastResetDate_not_in?: string[] | null;
    lastResetDate_lt?: string | null;
    lastResetDate_lte?: string | null;
    lastResetDate_gt?: string | null;
    lastResetDate_gte?: string | null;
    lastResetDate_contains?: string | null;
    lastResetDate_not_contains?: string | null;
    lastResetDate_starts_with?: string | null;
    lastResetDate_not_starts_with?: string | null;
    lastResetDate_ends_with?: string | null;
    lastResetDate_not_ends_with?: string | null;
    name?: string | null;
    name_not?: string | null;
    name_in?: string[] | null;
    name_not_in?: string[] | null;
    name_lt?: string | null;
    name_lte?: string | null;
    name_gt?: string | null;
    name_gte?: string | null;
    name_contains?: string | null;
    name_not_contains?: string | null;
    name_starts_with?: string | null;
    name_not_starts_with?: string | null;
    name_ends_with?: string | null;
    name_not_ends_with?: string | null;
    certifiedStatus?: number | null;
    certifiedStatus_not?: number | null;
    certifiedStatus_in?: number[] | null;
    certifiedStatus_not_in?: number[] | null;
    certifiedStatus_lt?: number | null;
    certifiedStatus_lte?: number | null;
    certifiedStatus_gt?: number | null;
    certifiedStatus_gte?: number | null;
    headpic?: string | null;
    headpic_not?: string | null;
    headpic_in?: string[] | null;
    headpic_not_in?: string[] | null;
    headpic_lt?: string | null;
    headpic_lte?: string | null;
    headpic_gt?: string | null;
    headpic_gte?: string | null;
    headpic_contains?: string | null;
    headpic_not_contains?: string | null;
    headpic_starts_with?: string | null;
    headpic_not_starts_with?: string | null;
    headpic_ends_with?: string | null;
    headpic_not_ends_with?: string | null;
    kongKey?: string | null;
    kongKey_not?: string | null;
    kongKey_in?: string[] | null;
    kongKey_not_in?: string[] | null;
    kongKey_lt?: string | null;
    kongKey_lte?: string | null;
    kongKey_gt?: string | null;
    kongKey_gte?: string | null;
    kongKey_contains?: string | null;
    kongKey_not_contains?: string | null;
    kongKey_starts_with?: string | null;
    kongKey_not_starts_with?: string | null;
    kongKey_ends_with?: string | null;
    kongKey_not_ends_with?: string | null;
    kongId?: string | null;
    kongId_not?: string | null;
    kongId_in?: string[] | null;
    kongId_not_in?: string[] | null;
    kongId_lt?: string | null;
    kongId_lte?: string | null;
    kongId_gt?: string | null;
    kongId_gte?: string | null;
    kongId_contains?: string | null;
    kongId_not_contains?: string | null;
    kongId_starts_with?: string | null;
    kongId_not_starts_with?: string | null;
    kongId_ends_with?: string | null;
    kongId_not_ends_with?: string | null;
    accessKey?: string | null;
    accessKey_not?: string | null;
    accessKey_in?: string[] | null;
    accessKey_not_in?: string[] | null;
    accessKey_lt?: string | null;
    accessKey_lte?: string | null;
    accessKey_gt?: string | null;
    accessKey_gte?: string | null;
    accessKey_contains?: string | null;
    accessKey_not_contains?: string | null;
    accessKey_starts_with?: string | null;
    accessKey_not_starts_with?: string | null;
    accessKey_ends_with?: string | null;
    accessKey_not_ends_with?: string | null;
    accessId?: string | null;
    accessId_not?: string | null;
    accessId_in?: string[] | null;
    accessId_not_in?: string[] | null;
    accessId_lt?: string | null;
    accessId_lte?: string | null;
    accessId_gt?: string | null;
    accessId_gte?: string | null;
    accessId_contains?: string | null;
    accessId_not_contains?: string | null;
    accessId_starts_with?: string | null;
    accessId_not_starts_with?: string | null;
    accessId_ends_with?: string | null;
    accessId_not_ends_with?: string | null;
    passWord?: string | null;
    passWord_not?: string | null;
    passWord_in?: string[] | null;
    passWord_not_in?: string[] | null;
    passWord_lt?: string | null;
    passWord_lte?: string | null;
    passWord_gt?: string | null;
    passWord_gte?: string | null;
    passWord_contains?: string | null;
    passWord_not_contains?: string | null;
    passWord_starts_with?: string | null;
    passWord_not_starts_with?: string | null;
    passWord_ends_with?: string | null;
    passWord_not_ends_with?: string | null;
    lesseeId?: string | null;
    lesseeId_not?: string | null;
    lesseeId_in?: string[] | null;
    lesseeId_not_in?: string[] | null;
    lesseeId_lt?: string | null;
    lesseeId_lte?: string | null;
    lesseeId_gt?: string | null;
    lesseeId_gte?: string | null;
    lesseeId_contains?: string | null;
    lesseeId_not_contains?: string | null;
    lesseeId_starts_with?: string | null;
    lesseeId_not_starts_with?: string | null;
    lesseeId_ends_with?: string | null;
    lesseeId_not_ends_with?: string | null;
    wxopenId?: string | null;
    wxopenId_not?: string | null;
    wxopenId_in?: string[] | null;
    wxopenId_not_in?: string[] | null;
    wxopenId_lt?: string | null;
    wxopenId_lte?: string | null;
    wxopenId_gt?: string | null;
    wxopenId_gte?: string | null;
    wxopenId_contains?: string | null;
    wxopenId_not_contains?: string | null;
    wxopenId_starts_with?: string | null;
    wxopenId_not_starts_with?: string | null;
    wxopenId_ends_with?: string | null;
    wxopenId_not_ends_with?: string | null;
    AND?: AuthUserWhereInput[] | null;
    OR?: AuthUserWhereInput[] | null;
    NOT?: AuthUserWhereInput[] | null;
  }

  export interface ArgsCreateAuthUser {
    data: AuthUserCreateInput;
  }

  export interface ArgsUpdateAuthUser {
    data: AuthUserUpdateInput;
    where: AuthUserWhereUniqueInput;
  }

  export interface ArgsUpdateManyAuthUsers {
    data: AuthUserUpdateManyMutationInput;
    where?: AuthUserWhereInput | null;
  }

  export interface ArgsUpsertAuthUser {
    where: AuthUserWhereUniqueInput;
    create: AuthUserCreateInput;
    update: AuthUserUpdateInput;
  }

  export interface ArgsDeleteAuthUser {
    where: AuthUserWhereUniqueInput;
  }

  export interface ArgsDeleteManyAuthUsers {
    where?: AuthUserWhereInput | null;
  }

  export type CreateAuthUserResolver = (
    parent: undefined,
    args: ArgsCreateAuthUser,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | Promise<AuthUser>;

  export type UpdateAuthUserResolver = (
    parent: undefined,
    args: ArgsUpdateAuthUser,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | null | Promise<AuthUser | null>;

  export type UpdateManyAuthUsersResolver = (
    parent: undefined,
    args: ArgsUpdateManyAuthUsers,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => BatchPayload | Promise<BatchPayload>;

  export type UpsertAuthUserResolver = (
    parent: undefined,
    args: ArgsUpsertAuthUser,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | Promise<AuthUser>;

  export type DeleteAuthUserResolver = (
    parent: undefined,
    args: ArgsDeleteAuthUser,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | null | Promise<AuthUser | null>;

  export type DeleteManyAuthUsersResolver = (
    parent: undefined,
    args: ArgsDeleteManyAuthUsers,
    ctx: Context,
    info: GraphQLResolveInfo
  ) => BatchPayload | Promise<BatchPayload>;

  export interface Type {
    createAuthUser: (
      parent: undefined,
      args: ArgsCreateAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | Promise<AuthUser>;

    updateAuthUser: (
      parent: undefined,
      args: ArgsUpdateAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | null | Promise<AuthUser | null>;

    updateManyAuthUsers: (
      parent: undefined,
      args: ArgsUpdateManyAuthUsers,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => BatchPayload | Promise<BatchPayload>;

    upsertAuthUser: (
      parent: undefined,
      args: ArgsUpsertAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | Promise<AuthUser>;

    deleteAuthUser: (
      parent: undefined,
      args: ArgsDeleteAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | null | Promise<AuthUser | null>;

    deleteManyAuthUsers: (
      parent: undefined,
      args: ArgsDeleteManyAuthUsers,
      ctx: Context,
      info: GraphQLResolveInfo
    ) => BatchPayload | Promise<BatchPayload>;
  }
}

export namespace BatchPayloadResolvers {
  export const defaultResolvers = {
    count: (parent: BatchPayload) => parent.count
  };

  export type CountResolver = (
    parent: BatchPayload,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export interface Type {
    count: (
      parent: BatchPayload,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;
  }
}

export namespace SubscriptionResolvers {
  export const defaultResolvers = {};

  export interface AuthUserSubscriptionWhereInput {
    mutation_in?: MutationType[] | null;
    updatedFields_contains?: string | null;
    updatedFields_contains_every?: string[] | null;
    updatedFields_contains_some?: string[] | null;
    node?: AuthUserWhereInput | null;
    AND?: AuthUserSubscriptionWhereInput[] | null;
    OR?: AuthUserSubscriptionWhereInput[] | null;
    NOT?: AuthUserSubscriptionWhereInput[] | null;
  }
  export interface AuthUserWhereInput {
    id?: string | null;
    id_not?: string | null;
    id_in?: string[] | null;
    id_not_in?: string[] | null;
    id_lt?: string | null;
    id_lte?: string | null;
    id_gt?: string | null;
    id_gte?: string | null;
    id_contains?: string | null;
    id_not_contains?: string | null;
    id_starts_with?: string | null;
    id_not_starts_with?: string | null;
    id_ends_with?: string | null;
    id_not_ends_with?: string | null;
    mobileNo?: string | null;
    mobileNo_not?: string | null;
    mobileNo_in?: string[] | null;
    mobileNo_not_in?: string[] | null;
    mobileNo_lt?: string | null;
    mobileNo_lte?: string | null;
    mobileNo_gt?: string | null;
    mobileNo_gte?: string | null;
    mobileNo_contains?: string | null;
    mobileNo_not_contains?: string | null;
    mobileNo_starts_with?: string | null;
    mobileNo_not_starts_with?: string | null;
    mobileNo_ends_with?: string | null;
    mobileNo_not_ends_with?: string | null;
    idCard?: string | null;
    idCard_not?: string | null;
    idCard_in?: string[] | null;
    idCard_not_in?: string[] | null;
    idCard_lt?: string | null;
    idCard_lte?: string | null;
    idCard_gt?: string | null;
    idCard_gte?: string | null;
    idCard_contains?: string | null;
    idCard_not_contains?: string | null;
    idCard_starts_with?: string | null;
    idCard_not_starts_with?: string | null;
    idCard_ends_with?: string | null;
    idCard_not_ends_with?: string | null;
    userName?: string | null;
    userName_not?: string | null;
    userName_in?: string[] | null;
    userName_not_in?: string[] | null;
    userName_lt?: string | null;
    userName_lte?: string | null;
    userName_gt?: string | null;
    userName_gte?: string | null;
    userName_contains?: string | null;
    userName_not_contains?: string | null;
    userName_starts_with?: string | null;
    userName_not_starts_with?: string | null;
    userName_ends_with?: string | null;
    userName_not_ends_with?: string | null;
    email?: string | null;
    email_not?: string | null;
    email_in?: string[] | null;
    email_not_in?: string[] | null;
    email_lt?: string | null;
    email_lte?: string | null;
    email_gt?: string | null;
    email_gte?: string | null;
    email_contains?: string | null;
    email_not_contains?: string | null;
    email_starts_with?: string | null;
    email_not_starts_with?: string | null;
    email_ends_with?: string | null;
    email_not_ends_with?: string | null;
    lastLoginDate?: string | null;
    lastLoginDate_not?: string | null;
    lastLoginDate_in?: string[] | null;
    lastLoginDate_not_in?: string[] | null;
    lastLoginDate_lt?: string | null;
    lastLoginDate_lte?: string | null;
    lastLoginDate_gt?: string | null;
    lastLoginDate_gte?: string | null;
    lastLoginDate_contains?: string | null;
    lastLoginDate_not_contains?: string | null;
    lastLoginDate_starts_with?: string | null;
    lastLoginDate_not_starts_with?: string | null;
    lastLoginDate_ends_with?: string | null;
    lastLoginDate_not_ends_with?: string | null;
    lastResetDate?: string | null;
    lastResetDate_not?: string | null;
    lastResetDate_in?: string[] | null;
    lastResetDate_not_in?: string[] | null;
    lastResetDate_lt?: string | null;
    lastResetDate_lte?: string | null;
    lastResetDate_gt?: string | null;
    lastResetDate_gte?: string | null;
    lastResetDate_contains?: string | null;
    lastResetDate_not_contains?: string | null;
    lastResetDate_starts_with?: string | null;
    lastResetDate_not_starts_with?: string | null;
    lastResetDate_ends_with?: string | null;
    lastResetDate_not_ends_with?: string | null;
    name?: string | null;
    name_not?: string | null;
    name_in?: string[] | null;
    name_not_in?: string[] | null;
    name_lt?: string | null;
    name_lte?: string | null;
    name_gt?: string | null;
    name_gte?: string | null;
    name_contains?: string | null;
    name_not_contains?: string | null;
    name_starts_with?: string | null;
    name_not_starts_with?: string | null;
    name_ends_with?: string | null;
    name_not_ends_with?: string | null;
    certifiedStatus?: number | null;
    certifiedStatus_not?: number | null;
    certifiedStatus_in?: number[] | null;
    certifiedStatus_not_in?: number[] | null;
    certifiedStatus_lt?: number | null;
    certifiedStatus_lte?: number | null;
    certifiedStatus_gt?: number | null;
    certifiedStatus_gte?: number | null;
    headpic?: string | null;
    headpic_not?: string | null;
    headpic_in?: string[] | null;
    headpic_not_in?: string[] | null;
    headpic_lt?: string | null;
    headpic_lte?: string | null;
    headpic_gt?: string | null;
    headpic_gte?: string | null;
    headpic_contains?: string | null;
    headpic_not_contains?: string | null;
    headpic_starts_with?: string | null;
    headpic_not_starts_with?: string | null;
    headpic_ends_with?: string | null;
    headpic_not_ends_with?: string | null;
    kongKey?: string | null;
    kongKey_not?: string | null;
    kongKey_in?: string[] | null;
    kongKey_not_in?: string[] | null;
    kongKey_lt?: string | null;
    kongKey_lte?: string | null;
    kongKey_gt?: string | null;
    kongKey_gte?: string | null;
    kongKey_contains?: string | null;
    kongKey_not_contains?: string | null;
    kongKey_starts_with?: string | null;
    kongKey_not_starts_with?: string | null;
    kongKey_ends_with?: string | null;
    kongKey_not_ends_with?: string | null;
    kongId?: string | null;
    kongId_not?: string | null;
    kongId_in?: string[] | null;
    kongId_not_in?: string[] | null;
    kongId_lt?: string | null;
    kongId_lte?: string | null;
    kongId_gt?: string | null;
    kongId_gte?: string | null;
    kongId_contains?: string | null;
    kongId_not_contains?: string | null;
    kongId_starts_with?: string | null;
    kongId_not_starts_with?: string | null;
    kongId_ends_with?: string | null;
    kongId_not_ends_with?: string | null;
    accessKey?: string | null;
    accessKey_not?: string | null;
    accessKey_in?: string[] | null;
    accessKey_not_in?: string[] | null;
    accessKey_lt?: string | null;
    accessKey_lte?: string | null;
    accessKey_gt?: string | null;
    accessKey_gte?: string | null;
    accessKey_contains?: string | null;
    accessKey_not_contains?: string | null;
    accessKey_starts_with?: string | null;
    accessKey_not_starts_with?: string | null;
    accessKey_ends_with?: string | null;
    accessKey_not_ends_with?: string | null;
    accessId?: string | null;
    accessId_not?: string | null;
    accessId_in?: string[] | null;
    accessId_not_in?: string[] | null;
    accessId_lt?: string | null;
    accessId_lte?: string | null;
    accessId_gt?: string | null;
    accessId_gte?: string | null;
    accessId_contains?: string | null;
    accessId_not_contains?: string | null;
    accessId_starts_with?: string | null;
    accessId_not_starts_with?: string | null;
    accessId_ends_with?: string | null;
    accessId_not_ends_with?: string | null;
    passWord?: string | null;
    passWord_not?: string | null;
    passWord_in?: string[] | null;
    passWord_not_in?: string[] | null;
    passWord_lt?: string | null;
    passWord_lte?: string | null;
    passWord_gt?: string | null;
    passWord_gte?: string | null;
    passWord_contains?: string | null;
    passWord_not_contains?: string | null;
    passWord_starts_with?: string | null;
    passWord_not_starts_with?: string | null;
    passWord_ends_with?: string | null;
    passWord_not_ends_with?: string | null;
    lesseeId?: string | null;
    lesseeId_not?: string | null;
    lesseeId_in?: string[] | null;
    lesseeId_not_in?: string[] | null;
    lesseeId_lt?: string | null;
    lesseeId_lte?: string | null;
    lesseeId_gt?: string | null;
    lesseeId_gte?: string | null;
    lesseeId_contains?: string | null;
    lesseeId_not_contains?: string | null;
    lesseeId_starts_with?: string | null;
    lesseeId_not_starts_with?: string | null;
    lesseeId_ends_with?: string | null;
    lesseeId_not_ends_with?: string | null;
    wxopenId?: string | null;
    wxopenId_not?: string | null;
    wxopenId_in?: string[] | null;
    wxopenId_not_in?: string[] | null;
    wxopenId_lt?: string | null;
    wxopenId_lte?: string | null;
    wxopenId_gt?: string | null;
    wxopenId_gte?: string | null;
    wxopenId_contains?: string | null;
    wxopenId_not_contains?: string | null;
    wxopenId_starts_with?: string | null;
    wxopenId_not_starts_with?: string | null;
    wxopenId_ends_with?: string | null;
    wxopenId_not_ends_with?: string | null;
    AND?: AuthUserWhereInput[] | null;
    OR?: AuthUserWhereInput[] | null;
    NOT?: AuthUserWhereInput[] | null;
  }

  export interface ArgsAuthUser {
    where?: AuthUserSubscriptionWhereInput | null;
  }

  export type AuthUserResolver = {
    subscribe: (
      parent: undefined,
      args: ArgsAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) =>
      | AsyncIterator<AuthUserSubscriptionPayload | null>
      | Promise<AsyncIterator<AuthUserSubscriptionPayload | null>>;
    resolve?: (
      parent: undefined,
      args: ArgsAuthUser,
      ctx: Context,
      info: GraphQLResolveInfo
    ) =>
      | AuthUserSubscriptionPayload
      | null
      | Promise<AuthUserSubscriptionPayload | null>;
  };

  export interface Type {
    authUser: {
      subscribe: (
        parent: undefined,
        args: ArgsAuthUser,
        ctx: Context,
        info: GraphQLResolveInfo
      ) =>
        | AsyncIterator<AuthUserSubscriptionPayload | null>
        | Promise<AsyncIterator<AuthUserSubscriptionPayload | null>>;
      resolve?: (
        parent: undefined,
        args: ArgsAuthUser,
        ctx: Context,
        info: GraphQLResolveInfo
      ) =>
        | AuthUserSubscriptionPayload
        | null
        | Promise<AuthUserSubscriptionPayload | null>;
    };
  }
}

export namespace AuthUserSubscriptionPayloadResolvers {
  export const defaultResolvers = {
    mutation: (parent: AuthUserSubscriptionPayload) => parent.mutation,
    node: (parent: AuthUserSubscriptionPayload) => parent.node,
    updatedFields: (parent: AuthUserSubscriptionPayload) =>
      parent.updatedFields,
    previousValues: (parent: AuthUserSubscriptionPayload) =>
      parent.previousValues
  };

  export type MutationResolver = (
    parent: AuthUserSubscriptionPayload,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => MutationType | Promise<MutationType>;

  export type NodeResolver = (
    parent: AuthUserSubscriptionPayload,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUser | null | Promise<AuthUser | null>;

  export type UpdatedFieldsResolver = (
    parent: AuthUserSubscriptionPayload,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string[] | null | Promise<string[] | null>;

  export type PreviousValuesResolver = (
    parent: AuthUserSubscriptionPayload,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => AuthUserPreviousValues | null | Promise<AuthUserPreviousValues | null>;

  export interface Type {
    mutation: (
      parent: AuthUserSubscriptionPayload,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => MutationType | Promise<MutationType>;

    node: (
      parent: AuthUserSubscriptionPayload,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUser | null | Promise<AuthUser | null>;

    updatedFields: (
      parent: AuthUserSubscriptionPayload,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string[] | null | Promise<string[] | null>;

    previousValues: (
      parent: AuthUserSubscriptionPayload,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => AuthUserPreviousValues | null | Promise<AuthUserPreviousValues | null>;
  }
}

export namespace AuthUserPreviousValuesResolvers {
  export const defaultResolvers = {
    id: (parent: AuthUserPreviousValues) => parent.id,
    mobileNo: (parent: AuthUserPreviousValues) =>
      parent.mobileNo === undefined ? null : parent.mobileNo,
    idCard: (parent: AuthUserPreviousValues) =>
      parent.idCard === undefined ? null : parent.idCard,
    userName: (parent: AuthUserPreviousValues) => parent.userName,
    email: (parent: AuthUserPreviousValues) =>
      parent.email === undefined ? null : parent.email,
    lastLoginDate: (parent: AuthUserPreviousValues) =>
      parent.lastLoginDate === undefined ? null : parent.lastLoginDate,
    lastResetDate: (parent: AuthUserPreviousValues) =>
      parent.lastResetDate === undefined ? null : parent.lastResetDate,
    name: (parent: AuthUserPreviousValues) =>
      parent.name === undefined ? null : parent.name,
    certifiedStatus: (parent: AuthUserPreviousValues) =>
      parent.certifiedStatus === undefined ? null : parent.certifiedStatus,
    headpic: (parent: AuthUserPreviousValues) =>
      parent.headpic === undefined ? null : parent.headpic,
    kongKey: (parent: AuthUserPreviousValues) =>
      parent.kongKey === undefined ? null : parent.kongKey,
    kongId: (parent: AuthUserPreviousValues) =>
      parent.kongId === undefined ? null : parent.kongId,
    accessKey: (parent: AuthUserPreviousValues) =>
      parent.accessKey === undefined ? null : parent.accessKey,
    accessId: (parent: AuthUserPreviousValues) =>
      parent.accessId === undefined ? null : parent.accessId,
    passWord: (parent: AuthUserPreviousValues) =>
      parent.passWord === undefined ? null : parent.passWord,
    lesseeId: (parent: AuthUserPreviousValues) =>
      parent.lesseeId === undefined ? null : parent.lesseeId,
    wxopenId: (parent: AuthUserPreviousValues) =>
      parent.wxopenId === undefined ? null : parent.wxopenId
  };

  export type IdResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export type MobileNoResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type IdCardResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type UserNameResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | Promise<string>;

  export type EmailResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type LastLoginDateResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type LastResetDateResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type NameResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type CertifiedStatusResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => number | null | Promise<number | null>;

  export type HeadpicResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type KongKeyResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type KongIdResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type AccessKeyResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type AccessIdResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type PassWordResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type LesseeIdResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export type WxopenIdResolver = (
    parent: AuthUserPreviousValues,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo
  ) => string | null | Promise<string | null>;

  export interface Type {
    id: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;

    mobileNo: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    idCard: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    userName: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | Promise<string>;

    email: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    lastLoginDate: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    lastResetDate: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    name: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    certifiedStatus: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => number | null | Promise<number | null>;

    headpic: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    kongKey: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    kongId: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    accessKey: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    accessId: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    passWord: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    lesseeId: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;

    wxopenId: (
      parent: AuthUserPreviousValues,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo
    ) => string | null | Promise<string | null>;
  }
}

export interface Resolvers {
  Query: QueryResolvers.Type;
  AuthUser: AuthUserResolvers.Type;
  AuthUserConnection: AuthUserConnectionResolvers.Type;
  PageInfo: PageInfoResolvers.Type;
  AuthUserEdge: AuthUserEdgeResolvers.Type;
  AggregateAuthUser: AggregateAuthUserResolvers.Type;
  Mutation: MutationResolvers.Type;
  BatchPayload: BatchPayloadResolvers.Type;
  Subscription: SubscriptionResolvers.Type;
  AuthUserSubscriptionPayload: AuthUserSubscriptionPayloadResolvers.Type;
  AuthUserPreviousValues: AuthUserPreviousValuesResolvers.Type;
}
